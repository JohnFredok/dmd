[
  {
    "id": "module:get_val",
    "longname": "module:get_val",
    "name": "get_val",
    "kind": "module",
    "description": "Provides class for getting value by key",
    "author": [
      "Viacheslav Lotsmanov"
    ],
    "version": "r11",
    "license": "GNU/AGPLv3",
    "see": [
      "{@link https://github.com/unclechu/js-useful-umd-modules/|GitHub}",
      "{@link https://github.com/unclechu/js-useful-umd-modules/blob/master/AGPLv3-LICENSE|License}"
    ],
    "order": 0
  },
  {
    "id": "GetVal~valuesArg",
    "longname": "GetVal~valuesArg",
    "name": "valuesArg",
    "scope": "inner",
    "kind": "typedef",
    "memberof": "GetVal",
    "type": {
      "names": [
        "Object.<(Object|Array)>"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "Object.<*>"
          ]
        },
        "nullable": false,
        "description": "Values key-val object",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "optional": true,
        "nullable": true,
        "description": "Array of required keys",
        "name": "required"
      }
    ],
    "nullable": false,
    "order": 1
  },
  {
    "id": "module:get_val~GetVal",
    "longname": "module:get_val~GetVal",
    "name": "GetVal",
    "scope": "inner",
    "kind": "class",
    "memberof": "module:get_val",
    "access": "public",
    "order": 2
  },
  {
    "id": "module:get_val~GetVal()",
    "longname": "module:get_val~GetVal",
    "name": "GetVal",
    "kind": "constructor",
    "memberof": "module:get_val~GetVal",
    "params": [
      {
        "type": {
          "names": [
            "GetVal~valuesArg"
          ]
        },
        "description": "Key-value object of values",
        "name": "values"
      },
      {
        "type": {
          "names": [
            "Object.<*>"
          ]
        },
        "optional": true,
        "nullable": true,
        "description": "Key-value object to set required values at instance creating",
        "name": "required"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "\"get\" method wrapper (you can get value from example of class directly as by function)"
      }
    ],
    "exceptions": [
      {
        "type": {
          "names": [
            "GetVal~IncorrectArgument"
          ]
        }
      },
      {
        "type": {
          "names": [
            "GetVal~RequiredArgumentKey"
          ]
        }
      }
    ],
    "order": 3
  },
  {
    "id": "GetVal~_values",
    "longname": "GetVal~_values",
    "name": "_values",
    "scope": "inner",
    "kind": "member",
    "memberof": "GetVal",
    "type": {
      "names": [
        "Object.<*>"
      ]
    },
    "nullable": false,
    "access": "private",
    "order": 4
  },
  {
    "id": "GetVal~_required",
    "longname": "GetVal~_required",
    "name": "_required",
    "scope": "inner",
    "kind": "member",
    "memberof": "GetVal",
    "type": {
      "names": [
        "Array.<string>"
      ]
    },
    "access": "private",
    "order": 5
  },
  {
    "id": "GetVal~super",
    "longname": "GetVal~super",
    "name": "super",
    "scope": "inner",
    "kind": "member",
    "description": "Link to class example for \"get\" method wrapper",
    "memberof": "GetVal",
    "type": {
      "names": [
        "GetVal"
      ]
    },
    "access": "public",
    "order": 6
  },
  {
    "id": "GetVal~_check-required",
    "longname": "GetVal~_check-required",
    "name": "_check-required",
    "scope": "inner",
    "kind": "function",
    "memberof": "GetVal",
    "access": "private",
    "exceptions": [
      {
        "type": {
          "names": [
            "GetVal~RequiredIsNotSet"
          ]
        }
      }
    ],
    "order": 7
  },
  {
    "id": "GetVal~set",
    "longname": "GetVal~set",
    "name": "set",
    "scope": "inner",
    "kind": "function",
    "description": "Set value by key\n(only for \"required\" keys)",
    "memberof": "GetVal",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Key that in \"required\" list",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value that can be got in the future by \"key\"",
        "name": "val"
      }
    ],
    "access": "public",
    "exceptions": [
      {
        "type": {
          "names": [
            "GetVal~IncorrectKey"
          ]
        }
      },
      {
        "type": {
          "names": [
            "GetVal~NoKeyInRequiredList"
          ]
        }
      }
    ],
    "order": 8
  },
  {
    "id": "GetVal~get",
    "longname": "GetVal~get",
    "name": "get",
    "scope": "inner",
    "kind": "function",
    "description": "Get value by key",
    "memberof": "GetVal",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Get value by this key",
        "name": "key"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "Get value even if all required values is not setted yet",
        "name": "ignoreRequired"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "Value by key"
      }
    ],
    "access": "public",
    "exceptions": [
      {
        "type": {
          "names": [
            "GetVal~RequiredIsNotSet"
          ]
        }
      },
      {
        "type": {
          "names": [
            "GetVal~IncorrectKey"
          ]
        }
      },
      {
        "type": {
          "names": [
            "GetVal~KeyIsNotExists"
          ]
        }
      }
    ],
    "order": 9
  },
  {
    "id": "GetVal~exceptions",
    "longname": "GetVal~exceptions",
    "name": "exceptions",
    "scope": "inner",
    "kind": "member",
    "description": "Exceptions",
    "memberof": "GetVal",
    "type": {
      "names": [
        "Object.<Error>"
      ]
    },
    "readonly": true,
    "properties": [
      {
        "type": {
          "names": [
            "GetVal~IncorrectArgument"
          ]
        },
        "description": "Incorrect argument type for constructor"
      },
      {
        "type": {
          "names": [
            "GetVal~RequiredArgumentKey"
          ]
        },
        "description": "Required argument key is not set or has incorrect type (for constructor)"
      },
      {
        "type": {
          "names": [
            "GetVal~IncorrectKey"
          ]
        },
        "description": "Incorrect key type for get/set methods"
      },
      {
        "type": {
          "names": [
            "GetVal~KeyIsNotExists"
          ]
        },
        "description": "Value not found by key"
      },
      {
        "type": {
          "names": [
            "GetVal~RequiredIsNotSet"
          ]
        },
        "description": "Attempt to get value before all required values sets"
      },
      {
        "type": {
          "names": [
            "GetVal~NoKeyInRequiredList"
          ]
        },
        "description": "Attempt to set required value by key that not in required list"
      }
    ],
    "access": "public",
    "order": 10
  }
]